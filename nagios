---
- name: Install Nagios Core and Plugins on RHEL
  hosts: nagios_servers
  become: yes

  vars:
    nagios_user: nagios
    nagios_group: nagcmd
    nagios_admin: nagiosadmin
    nagios_core_version: "4.4.14"
    nagios_plugins_version: "2.3.3"
    net_snmp_version: "5.9.4"
    httpd_conf_path: "/etc/httpd/conf.d"
    nagios_url: "https://github.com/NagiosEnterprises/nagioscore/releases/download/nagios-{{ nagios_core_version }}/nagios-{{ nagios_core_version }}.tar.gz"
    plugins_url: "https://nagios-plugins.org/download/nagios-plugins-{{ nagios_plugins_version }}.tar.gz"
    net_snmp_url: "https://downloads.sourceforge.net/project/net-snmp/net-snmp/{{ net_snmp_version }}/net-snmp-{{ net_snmp_version }}.tar.gz"

  tasks:

  - name: Install required packages
    dnf:
      name:
        - httpd
        - php
        - php-cli
        - gcc
        - glibc
        - glibc-common
        - gd
        - gd-devel
        - net-snmp
        - openssl-devel
        - wget
        - unzip
        - make
      state: present

  - name: Create nagios user and group
    user:
      name: "{{ nagios_user }}"
      group: "{{ nagios_group }}"
      groups: apache
      append: yes
    notify: Restart Apache

  - name: Ensure nagcmd group exists
    group:
      name: "{{ nagios_group }}"
      state: present

  - name: Add apache to nagcmd group
    user:
      name: apache
      groups: "{{ nagios_group }}"
      append: yes

  - name: Download Nagios Core
    get_url:
      url: "{{ nagios_url }}"
      dest: /tmp/nagios.tar.gz

  - name: Extract Nagios Core
    unarchive:
      src: /tmp/nagios.tar.gz
      dest: /tmp
      remote_src: yes

  - name: Compile and install Nagios Core
    shell: |
      ./configure --with-httpd-conf={{ httpd_conf_path }}
      make all
      make install
      make install-init
      make install-commandmode
      make install-config
      make install-webconf
    args:
      chdir: "/tmp/nagios-{{ nagios_core_version }}"

  - name: Set Nagios Web Admin Password
    shell: htpasswd -b -c /usr/local/nagios/etc/htpasswd.users {{ nagios_admin }} "{{ nagios_admin }}"
    args:
      creates: /usr/local/nagios/etc/htpasswd.users

  - name: Download Nagios Plugins
    get_url:
      url: "{{ plugins_url }}"
      dest: /tmp/nagios-plugins.tar.gz

  - name: Extract Nagios Plugins
    unarchive:
      src: /tmp/nagios-plugins.tar.gz
      dest: /tmp
      remote_src: yes

  - name: Compile and install Nagios Plugins
    shell: |
      ./configure --with-nagios-user={{ nagios_user }} --with-nagios-group={{ nagios_user }}
      make
      make install
    args:
      chdir: "/tmp/nagios-plugins-{{ nagios_plugins_version }}"

  - name: Set SELinux to permissive temporarily
    command: setenforce 0
    when: ansible_selinux.status == "enabled"

  - name: Make SELinux permissive permanently
    replace:
      path: /etc/selinux/config
      regexp: '^SELINUX=enforcing'
      replace: 'SELINUX=permissive'

  - name: Open firewall ports for HTTP/HTTPS
    firewalld:
      service: "{{ item }}"
      permanent: yes
      state: enabled
      immediate: yes
    loop:
      - http
      - https

  - name: Enable and start Nagios service
    systemd:
      name: nagios
      enabled: yes
      state: started

  - name: Enable and start Apache
    systemd:
      name: httpd
      enabled: yes
      state: started

  - name: Verify Nagios config
    command: /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
    register: nagios_check

  - name: Display Nagios verification output
    debug:
      var: nagios_check.stdout_lines

  handlers:
    - name: Restart Apache
      systemd:
        name: httpd
        state: restarted
